{"version":3,"sources":["store/actions.js","services/authService.js","store/reducer.js","store/store.js","services/network.js","services/betaseriesAPI.js","components/modal/modalLogin.js","components/navbar/profileMenu.js","components/navbar/navItems.js","components/navbar/navbar.js","components/pages/movies/getAllMovies.js","components/card/cardButtons.js","components/card/cardDetails.js","components/card/posterCard.js","components/pages/shows/getAllShows.js","components/pages/shows/listEpisode.js","components/pages/shows/comments.js","components/pages/shows/showDetails.js","components/pages/home/home.js","components/pages/profil/profil.js","components/pages/amis/amis.js","App.js","serviceWorker.js","index.js"],"names":["ACTIONS","authService","token","localStorage","setItem","removeItem","getItem","Object","freeze","reducer","state","action","type","payload","login","access_token","avatar","locale","id","setToken","user","user_loading","removeToken","initialState","storeContext","createContext","StoreProvider","children","storeReducer","useReducer","Provider","value","useStore","useContext","axios","interceptors","response","use","error","API_URL","process","authHeader","headers","Authorization","betaseriesAPI","network","post","password","params","get","limit","start","title","blocked","received","delete","bulk","order","text","md5","require","useStyles","makeStyles","theme","wrapper","margin","spacing","position","fabProgress","color","primary","top","left","zIndex","buttonProgress","marginTop","marginLeft","ModalLogin","isOpen","storeDispatch","handleClose","classes","useState","name","setName","setPassword","isInvalid","setIsInvalid","isLoading","setIsLoading","handleSubmit","a","invalids","res","status","getUserInfo","data","userResp","member","resetErrorMsg","Dialog","open","onClose","maxWidth","aria-labelledby","DialogTitle","style","textAlign","className","DialogContent","padding","TextField","autoFocus","label","fullWidth","onChange","e","target","CircularProgress","size","Button","variant","disabled","display","onClick","DialogActions","ProfileMenu","anchorEl","setOpenMenu","openMenu","store","history","useHistory","handleClick","path","push","Menu","keepMounted","PaperProps","transform","offsetHeight","border","elevation","TransitionComponent","Fade","MenuItem","FloatNavigationMenuStyle","React","memo","location","useLocation","gutter","useFloatNavigationMenuStyles","fontSize","as","Link","to","active","pathname","root","flexGrow","paddingTop","marginBottom","menuButton","marginRight","appBar","backgroundColor","fontWeight","textleft","NavBar","setOpen","useRef","AppBar","Toolbar","Typography","textDecoration","justifyContent","Skeleton","width","height","ref","aria-controls","aria-haspopup","textTransform","current","Avatar","alt","src","charAt","Movies","allMovies","setAllMovies","showMovies","getAllMovies","movies","console","log","useEffect","map","parent","bottom","btnWrapper","handleAddShow","handleRemoveShow","setShowDetails","inUser","useArrowWhiteButtonStyles","gutterStyles","Box","v","KeyboardArrowUp","bannerTitle","fontFamily","bannerBottomLeft","bannerItem","bannerBottomText","bannerImg","objectFit","filter","bannerBottomRight","right","bannerWrapper","content","tag","metaDataRight","tagWrapper","dialogActions","Transition","forwardRef","props","Slide","direction","showDetails","show","images","seasons","length","notes","creation","genres","rating","episodes","description","arrowBtnStyle","useArrowDarkButtonStyles","archiveInUser","setArchiveInUser","handleArchiveShow","archiveShow","handleUnarchiveShow","unarchiveShow","NoSsr","fonts","font","weights","aria-describedby","mean","toFixed","Grid","container","justify","item","xs","md","values","join","transformOrigin","KeyboardArrowDown","card","borderRadius","boxShadow","minWidth","minHeight","background","transition","buttonBox","backImg","GalaxyCard","poster","mediaStyles","useCoverCardMediaStyles","bgPosition","styles","isHovered","setIsHovered","setInUser","renderModal","useCallback","addShowToUser","removeShowToUser","Card","onMouseOver","onMouseLeave","CardMedia","image","Grow","in","timeout","py","px","useGalaxyInfoStyles","center","textfield","GetAllShows","allShows","setAllShows","showsStarting","setShowsStarting","inputSearch","setInputSearch","showShows","getAllShows","shows","timeOut","setTimeout","getAllShowsWith","then","catch","err","finally","clearTimeout","pagePrev","pageNext","Container","event","sm","lg","xl","key","m","component","bullet","pos","divider","OutlinedCard","episode","getAllEpisodes","setEpisode","date","note","localDate","useMemo","Date","toLocaleDateString","weekday","year","month","day","handleCheckBox","stopPropagation","seen","addEpisodeWatched","removeEpisodeWatched","addOneEpisode","Accordion","AccordionSummary","expandIcon","aria-label","FormControlLabel","onFocus","control","Checkbox","checked","AccordionDetails","Divider","alignItems","disableElevation","AlertDialog","comments","setComments","commentInput","setCommentInput","getEpisodeDetails","getEpisodeComments","preventDefault","commentEpisode","comment","multiline","media","ShowDetails","idShow","useRouteMatch","setShow","setEpisodes","getShowEpisodes","getShowDetails","in_account","archived","gutterBottom","CardContent","season","overflowX","paper","palette","secondary","slideCard","swiperSettings","slidesPerView","pagination","el","clickable","spaceBetween","initialSlide","resistanceRatio","threshold","longSwipesRatio","navigation","nextEl","prevEl","breakpoints","600","slidesPerGroup","960","1280","1600","CenteredGrid","showsToDiscover","setShowsToDiscover","swiper","swiper2","Swiper","Pagination","Navigation","getShowsToDiscover","update","align","Array","val","i","upperCase","large","timeP","mt38","mt18","suivis","float","Profil","getToken","userInfo","setUserInfo","isNotFriend","setIsNotFriend","friendsBloqued","setFriendsBloqued","userFriends","setUserFriends","idUser","URL","listeBlockedFriends","friendListBlocked","users","TimeToWatching","time","hours","Math","floor","minutes","getUserInfoById","friendList","undefined","find","element","Paper","deblockFriend","addFriend","blockFriend","deleteFriend","stats","xp","badges","time_on_tv","time_to_spend","textLeft","floatRight","Amis","allMembers","setAllMembers","setValue","input","setInput","loading","handleChange","friendsReceived","findMembers","Autocomplete","newValue","onOpen","getOptionLabel","options","renderInput","InputProps","endAdornment","friends","App","dispatch","exact","Home","Shows","ShowTest","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.4f01b9a9.chunk.js","sourcesContent":["export const ACTIONS = {\n    LOGIN: 'login',\n    LOGOUT: 'logout',\n    USER_LOADING: 'user_loading',\n    USER_LOADING_DONE: 'user_loading_done',\n}","const TOKEN_KEY = \"betaseries_token\";\n\nclass AuthService {\n    setToken(token) {\n        localStorage.setItem(TOKEN_KEY, token);\n    }\n\n    removeToken() {\n        localStorage.removeItem(TOKEN_KEY);\n    }\n\n    getToken() {\n        return localStorage.getItem(TOKEN_KEY);\n    }\n}\n\nconst authService = new AuthService();\nObject.freeze(authService);\n\nexport { authService };","import { ACTIONS } from './actions';\nimport { authService } from '../services/authService';\n\nexport const reducer = (state, action) => {\n    switch (action.type) {\n        case ACTIONS.LOGIN:\n            const { login, access_token, avatar, locale, id } = action.payload;\n            authService.setToken(access_token);\n\n            return {\n                ...state,\n                user: {\n                    login,\n                    avatar,\n                    locale,\n                    id,\n                },\n                access_token,\n                user_loading: false,\n            };\n        case ACTIONS.LOGOUT:\n            authService.removeToken();\n\n            return {\n                ...state,\n                user: false,\n                access_token: null,\n            };\n        case ACTIONS.USER_LOADING:\n            return {\n                ...state,\n                user_loading: true,\n            }\n        case ACTIONS.USER_LOADING_DONE:\n            return {\n                ...state,\n                user_loading: false,\n            }\n        default:\n            return state;\n    };\n};","import React, { createContext, useReducer, useContext } from 'react';\nimport { ACTIONS } from './actions';\nimport { reducer } from './reducer';\n\nconst initialState = {\n    user: false,\n    access_token: null,\n    user_loading: true,\n};\n\nconst storeContext = createContext(initialState);\n\nconst StoreProvider = ({ children }) => {\n    const storeReducer = useReducer(reducer, initialState);\n\n    return <storeContext.Provider value={ storeReducer }>{children}</storeContext.Provider>\n};\n\nconst useStore = () => useContext(storeContext);\n\nexport { StoreProvider, useStore, ACTIONS }","import axios from 'axios';\n\naxios.interceptors.response.use(\n    response => response,\n    error => (error.response ? error.response : null),\n);\n\nexport { axios as network }","import { network } from './network';\n\nconst API_URL = process.env.REACT_APP_BETASERIES_API_URL;\nconst BETASERIES_KEY = process.env.REACT_APP_BETASERIES_KEY;\n\nconst authHeader = (token = false) => {\n    const headers = { 'X-BetaSeries-Key': BETASERIES_KEY };\n\n    if (token) {\n        headers.Authorization = `Bearer ${token}`;\n    }\n\n    return headers;\n}\n\nclass BetaseriesAPI {\n    login(user) {\n        return network.post(`${API_URL}/members/auth?login=${user.login}&password=${user.password}`, {}, { headers: authHeader() });\n    }\n\n    getAllShows(params) {\n        return network.get(`${API_URL}/shows/list?limit=${params.limit}&start=${params.start}`, { headers: authHeader() });\n    }\n\n    getAllShowsWith(params) {\n        return network.get(`${API_URL}/shows/list?limit=${params.limit}&start=${params.start}&starting=${params.title}`, { headers: authHeader() });\n    }\n\n    getAllMovies() {\n        return network.get(`${API_URL}/movies/list`, { headers: authHeader() });\n    }\n\n    IsTokenActive(token) {\n        return network.get(`${API_URL}/members/is_active`, { headers: authHeader(token) });\n    }\n\n    getUserInfo(token) {\n        return network.get(`${API_URL}/members/infos`, { headers: authHeader(token) } );\n    }\n\n    getUserInfoById(id) {\n        return network.get(`${API_URL}/members/infos?id=${id}`, { headers: authHeader() } );\n    }\n\n    memberDestroyToken(token) {\n        return network.post(`${API_URL}/members/destroy`, {}, { headers: authHeader(token) });\n    }\n\n    friendList(id, token, blocked = false) {\n        return network.get(`${API_URL}/friends/list`, { params: { id , blocked}, headers: authHeader(token) });\n    }\n\n    friendListBlocked(token, blocked = false) {\n        return network.get(`${API_URL}/friends/list`, { params: { blocked }, headers: authHeader(token) });\n    }\n\n    friendsReceived(token) {\n        return network.get(`${API_URL}/friends/requests`, { params: { received: true }, headers: authHeader(token) });\n    }\n    \n    blockFriend(id, token) {\n        return network.post(`${API_URL}/friends/block`, { id }, { headers: authHeader(token) });\n    }\n    \n    deblockFriend(id, token) {\n        return network.delete(`${API_URL}/friends/block`, { params: { id }, headers: authHeader(token) });\n    }\n\n    addFriend(id, token) {\n        return network.post(`${API_URL}/friends/friend`, { id }, { headers: authHeader(token) });\n    }\n    \n    deleteFriend(id, token) {\n        return network.delete(`${API_URL}/friends/friend`, { params: { id }, headers: authHeader(token) });\n    }\n    \n    findMembers(login) {\n        return network.get(`${API_URL}/members/search?login=${login}`, { headers: authHeader() });\n    }\n\n    getShowsToDiscover(token = null) {\n        return network.get(`${API_URL}/shows/discover?limit=30`, { headers: authHeader(token) });\n    }\n\n    getMoviesToDiscover(token = null) {\n        return network.get(`${API_URL}/movies/discover`, { params: {limit: 42, type: 'popular'}, headers: authHeader(token) });\n    }\n\n    getMovieDetails(id) {\n        return network.get(`${API_URL}/movies/movie`, { params: { id }, headers: authHeader() });\n    }\n\n    addShowToUser(id, token) {\n        return network.post(`${API_URL}/shows/show`, { id }, { headers: authHeader(token) });\n    }\n\n    removeShowToUser(id, token) {\n        return network.delete(`${API_URL}/shows/show`, { params: { id }, headers: authHeader(token) });\n    }\n\n    getShowDetails(id, token = null) {\n        return network.get(`${API_URL}/shows/display`, { params: { id }, headers: authHeader(token) });\n    }\n\n    archiveShow(id, token) {\n        return network.post(`${API_URL}/shows/archive`, { id }, { headers: authHeader(token) });\n    }\n\n    unarchiveShow(id, token) {\n        return network.delete(`${API_URL}/shows/archive`, { params: { id }, headers: authHeader(token) });\n    }\n\n    getShowEpisodes(id, token = null) {\n        return network.get(`${API_URL}/shows/episodes`, { params: { id }, headers: authHeader(token) });\n    }\n\n    getEpisodeDetails(id, token = null) {\n        return network.get(`${API_URL}/episodes/display`, { params: { id }, headers: authHeader(token) });\n    }\n\n    addEpisodeWatched(id, token, bulk = true) {\n        return network.post(`${API_URL}/episodes/watched`, { id, bulk }, { headers: authHeader(token) });\n    }\n\n    removeEpisodeWatched(id, token) {\n        return network.delete(`${API_URL}/episodes/watched`, { params: { id }, headers: authHeader(token) });\n    }\n\n    getEpisodeComments(id, token = null) {\n        return network.get(`${API_URL}/comments/comments`, { params: { id, type: 'episode', order: 'desc' }, headers: authHeader(token) });\n    }\n\n    commentEpisode(id, text, token) {\n        return network.post(`${API_URL}/comments/comment`, { id, type: 'episode', text }, { headers: authHeader(token) });\n    }\n}\n\nconst betaseriesAPI = new BetaseriesAPI();\nObject.freeze(betaseriesAPI);\n\nexport { betaseriesAPI };","import React, { useState } from 'react';\nimport { ACTIONS } from '../../store/store';\nimport { betaseriesAPI } from '../../services/betaseriesAPI';\nimport { Button, TextField, Dialog, DialogTitle, DialogContent, DialogActions, CircularProgress, makeStyles } from '@material-ui/core';\nimport './modalLogin.css';\nconst md5 = require('md5');\n\nconst useStyles = makeStyles((theme) => ({\n    wrapper: {\n        margin: theme.spacing(1),\n        position: 'relative',\n    },\n    fabProgress: {\n        color: theme.primary,\n        position: 'absolute',\n        top: -6,\n        left: -6,\n        zIndex: 1,\n    },\n    buttonProgress: {\n        color: theme.primary,\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n}));\n\nexport default function ModalLogin({ isOpen, storeDispatch, handleClose }) {\n    const classes = useStyles();\n    const [name, setName] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [isInvalid, setIsInvalid] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const handleSubmit = async () => {\n        setIsLoading(true);\n        let invalids = {};\n\n        if (name && password) {\n            const user = {\n                login: name,\n                password: md5(password)\n            }\n\n            const res = await betaseriesAPI.login(user);\n\n            if (res.status === 200) {\n                const userResp = await betaseriesAPI.getUserInfo(res.data.token);\n                const { login, avatar, locale, id } = userResp.data.member;\n                storeDispatch({ type: ACTIONS.LOGIN, payload: { login, access_token: res.data.token, avatar, locale, id } });\n                handleClose();\n                setIsInvalid(invalids);\n                setIsLoading(false);\n            } else {\n                invalids.error = \"Login ou mot de passe incorrect !\";\n                setIsInvalid(invalids);\n                setIsLoading(false);\n            }\n        } else {\n            setIsInvalid({ error: 'Login ou mot de passe manquant.' });\n            setIsLoading(false);\n        }\n    }\n\n    const resetErrorMsg = () => {\n        if (isInvalid) {\n            setIsInvalid(false)\n        }\n    }\n\n    return (\n        <>\n            <Dialog open={isOpen} onClose={() => { handleClose(); setIsInvalid({}); }} maxWidth={'xs'} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\" style={{ textAlign: 'center', color: '#3f51b5' }}>Login</DialogTitle>\n\n                <div className=\"error\">{isInvalid.error}</div>\n\n                <DialogContent>\n                    <form style={{ padding: '0px 20px' }}>\n\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"name\"\n                            label=\"Username\"\n                            type=\"text\"\n                            fullWidth\n                            onChange={(e) => { setName(e.target.value); resetErrorMsg(); }}\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            id=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            fullWidth\n                            onChange={(e) => { setPassword(e.target.value); resetErrorMsg(); }}\n                        />\n                        <div className={classes.wrapper}>\n\n                            {isLoading\n                                ?\n                                (<>\n                                    <CircularProgress size={24} className={classes.buttonProgress} />\n                                    <Button variant=\"contained\" disabled style={{ margin: '35px auto 20px auto', display: 'block' }}>Submit</Button>\n                                </>)\n                                :\n                                <Button\n                                    type=\"submit\"\n                                    onClick={handleSubmit}\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    style={{ margin: '35px auto 10px auto', display: 'block' }}\n                                >\n                                    Envoyer\n                                </Button>\n\n                            }\n                        </div>\n                    </form>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => {handleClose(); resetErrorMsg()}} color=\"primary\">Cancel</Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n}","import React from 'react';\nimport { Menu, MenuItem, Fade } from '@material-ui/core';\nimport { ACTIONS } from '../../store/store';\nimport { useHistory } from \"react-router-dom\";\n\nexport default function ProfileMenu({ anchorEl, setOpenMenu, openMenu, storeDispatch, store }) {\n  const history = useHistory();\n\n  const handleClose = () => {\n    setOpenMenu(false);\n  };\n\n  const handleLogout = () => {\n    storeDispatch({ type: ACTIONS.LOGOUT });\n    handleClose();\n  }\n\n  const handleClick = (path) => {\n    handleClose();\n    history.push(path);\n  }\n\n  return (\n    <>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        PaperProps={{\n          style: {\n            transform: `translateY(${anchorEl?.offsetHeight}px)`,\n            border: 'solid rgba(0, 0, 0, 0.24) 1px',\n          },\n          elevation: 1\n        }}\n        TransitionComponent={Fade}\n        open={openMenu}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={() =>  handleClick(`/profil/${store.user.id}`) }>Profil</MenuItem>\n        <MenuItem onClick={() =>  handleClick(`/profil/${store.user.id}/friends`) }>Mes amis</MenuItem>\n        <MenuItem onClick={() =>  handleClick(`/friends/${store.user.id}`) }>Paramètres</MenuItem>\n        <MenuItem onClick={handleLogout}>Se déconnecter</MenuItem>\n      </Menu>\n    </>\n  );\n}\n","import React from 'react';\nimport { NavMenu, NavItem } from '@mui-treasury/components/menu/navigation';\nimport { useFloatNavigationMenuStyles } from '@mui-treasury/styles/navigationMenu/float';\nimport { Link, useLocation } from \"react-router-dom\";\n\nexport const FloatNavigationMenuStyle = React.memo(\n  function FloatNavigationMenu() {\n    const location = useLocation();\n\n    return (\n      <>\n        <NavMenu gutter={1} useStyles={useFloatNavigationMenuStyles} style={{ fontSize: '1.5rem' }}>\n          <NavItem as={Link} to=\"/\"  active={location.pathname === '/'}>Accueil</NavItem>\n          <NavItem as={Link} to=\"/shows\" active={location.pathname === '/shows'}>Séries</NavItem>\n          <NavItem as={Link} to=\"/movies\" active={location.pathname === '/movies'}>Films</NavItem>\n          <NavItem>Ma liste</NavItem>\n        </NavMenu>\n      </>\n    );\n  }\n);\nexport default FloatNavigationMenuStyle;","import React, { useState, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useStore } from '../../store/store';\nimport { Button, Typography, Toolbar, AppBar, Avatar } from '@material-ui/core';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { Link } from 'react-router-dom';\nimport ModalLogin from '../modal/modalLogin';\nimport ProfileMenu from './profileMenu';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport NavigationMenu from './navItems';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        paddingTop: '8px',\n        marginBottom: '45px',\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    appBar: {\n        backgroundColor: 'white',\n    },\n    title: {\n        flexGrow: 1,\n        fontWeight: 600,\n    },\n    textleft: {\n        textAlign: \"left\",\n    }\n}));\n\nexport default function NavBar() {\n    const classes = useStyles();\n    const [store, storeDispatch] = useStore();\n    const [open, setOpen] = useState(false);\n    const [openMenu, setOpenMenu] = useState(false);\n    const anchorEl = useRef(null);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div className={classes.root}>\n            <AppBar className={classes.appBar} position=\"static\" elevation={0}>\n                <Toolbar>\n                    <Typography variant=\"h4\" color=\"primary\" className={`${classes.title} ${classes.textleft}`}>\n                        <Link to=\"/\" style={{ color: 'inherit', textDecoration: 'inherit' }} >Nentai</Link>\n                    </Typography>\n                    <div\n                        style={{\n                            position: 'absolute',\n                            left: '50%',\n                            transform: 'translateX(-50%)'\n                        }}\n                    >\n                        <NavigationMenu />\n                    </div>\n                    <div style={{ display: 'flex', flexGrow: 1, justifyContent: 'flex-end' }}>\n                        {store.user_loading ?\n                            (<>\n                                <Skeleton variant=\"text\" width=\"13%\" style={{ marginRight: '10px' }}></Skeleton>\n                                <Skeleton variant=\"circle\" width={40} height={40}></Skeleton>\n                            </>)\n                            :\n                            (store.user\n                                ?\n                                (<>\n                                    <Button\n                                        ref={anchorEl}\n                                        aria-controls=\"simple-menu\"\n                                        aria-haspopup=\"true\"\n                                        onClick={() => setOpenMenu(true)}\n                                        style={{ marginRight: '5px', color: 'rgba(0, 0, 0, 0.54)', textTransform: 'none', fontSize: '1.2rem' }}\n                                    >\n                                        {store.user.login}\n                                        <ArrowDropDownIcon style={{ marginLeft: '3px' }} />\n                                    </Button>\n                                    <ProfileMenu anchorEl={anchorEl.current} openMenu={openMenu} setOpenMenu={setOpenMenu} storeDispatch={storeDispatch} store={store} />\n                                    <Link to={`/profil/${store.user.id}`} style={{ margin: 'auto 0' }}>\n                                        {store.user.avatar\n                                            ? <Avatar alt=\"profile-pic\" src={store.user.avatar}></Avatar>\n                                            : <Avatar alt=\"profile-pic\">{store.user.login.charAt(0)}</Avatar>}\n                                    </Link>\n                                </>)\n                                :\n                                <Button onClick={handleClickOpen} style={{ color: 'rgba(0, 0, 0, 0.54)' }}>S'identifier</Button>\n                            )\n                        }\n                    </div>\n\n                </Toolbar>\n            </AppBar>\n            <ModalLogin isOpen={open} handleClose={handleClose} storeDispatch={storeDispatch} />\n        </div>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { betaseriesAPI } from '../../../services/betaseriesAPI';\n\nexport default function Movies() {\n    const [allMovies, setAllMovies] = useState(null);\n\n    const showMovies = async () => {\n        const res = await betaseriesAPI.getAllMovies();\n\n        if (res.status === 200) {\n            setAllMovies(res.data.movies);\n        } else {\n            console.log(res.data);\n        }\n    }\n\n    useEffect(() => {\n        showMovies();\n    }, [])\n\n    return (\n        <>\n            {allMovies && allMovies.map((e) => {\n                return (<>\n                    <span>Title: {e.title}</span>\n                    <br />\n                </>);\n            })}\n        </>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport { Box, makeStyles, Button, CircularProgress} from '@material-ui/core';\nimport { KeyboardArrowUp } from '@material-ui/icons';\nimport { useArrowWhiteButtonStyles } from '@mui-treasury/styles/button/arrowWhite';\nimport CheckIcon from '@material-ui/icons/Check';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles(() => ({\n  parent: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginTop: 'auto',\n    width: '95%',\n    position: 'absolute',\n    bottom: 6\n  },\n  fabProgress: {\n    color: 'white',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    zIndex: 1,\n    marginRight: 'auto',\n    marginLeft: 'auto',\n  },\n  btnWrapper: {\n    position: 'relative',\n    transform: 'scale(0.7)'\n  }\n}));\n\nexport default React.memo(function CardButton({ handleAddShow, handleRemoveShow, setShowDetails, inUser, store }) {\n  const classes = useArrowWhiteButtonStyles();\n  const gutterStyles = useStyles();\n  const [isLoading, setIsLoading] = useState(false);\n  \n  useEffect(() => {\n    setIsLoading(false);\n  }, [inUser]);\n\n  const handleClick = () => {\n    if(isLoading) {\n      return;\n    }\n\n    if (!inUser) {\n      setIsLoading(true);\n      handleAddShow();\n    } else {\n      setIsLoading(true);\n      handleRemoveShow();\n    }\n  }\n\n  const handleDetailsOpen = () => {\n    setShowDetails(v => !v);\n  }\n\n  return (\n    <Box className={gutterStyles.parent}>\n      <div className={gutterStyles.btnWrapper}>\n        {\n          store.user &&\n          (<Button classes={classes} onClick={handleClick}>\n            {inUser ? <CheckIcon /> : <AddIcon />}\n          </Button>)\n        }\n        { isLoading && !inUser && <CircularProgress size=\"100%\" className={gutterStyles.fabProgress} />}\n      </div>\n      <div className={gutterStyles.btnWrapper}>\n        <Button classes={classes} onClick={handleDetailsOpen}>\n          <KeyboardArrowUp />\n        </Button>\n      </div>\n    </Box>\n  );\n});\n\n// export default CardButton;","import React, { useState, useEffect } from 'react';\nimport { betaseriesAPI } from '../../services/betaseriesAPI'\nimport { Slide, Button, Dialog, DialogActions, DialogContent, makeStyles, Grid, Box, CircularProgress } from '@material-ui/core';\nimport { useArrowDarkButtonStyles } from '@mui-treasury/styles/button/arrowDark';\nimport { KeyboardArrowDown } from '@material-ui/icons';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport GoogleFontLoader from 'react-google-font-loader';\nimport AddIcon from '@material-ui/icons/Add';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ArchiveIcon from '@material-ui/icons/Archive';\nimport UnarchiveIcon from '@material-ui/icons/Unarchive';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport RestoreFromTrashIcon from '@material-ui/icons/RestoreFromTrash';\n\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  bannerTitle: {\n    top: '50%',\n    width: '100%',\n    textAlign: 'center',\n    transform: 'translateY(-50%)',\n    color: 'white',\n    fontFamily: 'Montserrat',\n  },\n  bannerBottomLeft: {\n    bottom: '20px',\n    left: '20px',\n    color: 'white',\n  },\n  bannerItem: {\n    zIndex: 10,\n    position: 'absolute',\n    margin: 0,\n  },\n  bannerBottomText: {\n    color: 'white',\n    fontSize: '1.2rem',\n    fontFamily: 'Spartan',\n  },\n  bannerImg: {\n    objectFit: 'contain',\n    maxWidth: '100%',\n    filter: 'brightness(45%)'\n  },\n  bannerBottomRight: {\n    bottom: '20px',\n    right: '20px'\n  },\n  bannerWrapper: {\n    position: 'relative',\n  },\n  content: {\n    padding: '15px 0',\n  },\n  tag: {\n    color: 'rgba(0, 0, 0, 0.54)',\n  },\n  metaDataRight: {\n    fontSize: '1.1rem',\n  },\n  tagWrapper: {\n    marginBottom: '9px',\n  },\n  dialogActions: {\n    backgroundColor: 'rgba(63, 81, 181, 0.04)',\n    justifyContent: 'space-between',\n  },\n  parent: {\n    display: 'flex',\n  },\n  fabProgress: {\n    color: 'black',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    zIndex: 1,\n    marginRight: 'auto',\n    marginLeft: 'auto',\n  },\n  btnWrapper: {\n    position: 'relative',\n    marginRight: '1.5rem',\n  }\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default React.memo(function SimpleSlide({ showDetails, setShowDetails, show, store, handleAddShow, handleRemoveShow, inUser }) {\n  const { id, title, images, seasons, length, notes, creation, genres, rating, episodes, description } = show;\n  const history = useHistory();\n  const classes = useStyles();\n  const arrowBtnStyle = useArrowDarkButtonStyles();\n  const gutterStyles = useStyles();\n  const [isLoading, setIsLoading] = useState(false);\n  const [archiveInUser, setArchiveInUser] = useState(false);\n  const handleClose = () => setShowDetails(v => !v);\n\n  useEffect(() => {\n    setIsLoading(false);\n  }, [inUser]);\n\n  const handleClick = () => {\n    if (isLoading) {\n      return;\n    }\n\n    if (!inUser) {\n      setIsLoading(true);\n      handleAddShow();\n    } else {\n      setIsLoading(true);\n      handleRemoveShow();\n    }\n  }\n\n  const handleArchiveClick = () => {\n    if (!archiveInUser) {\n      handleArchiveShow();\n    } else {\n      handleUnarchiveShow();\n    }\n  }\n\n  const handleArchiveShow = async () => {\n    const response = await betaseriesAPI.archiveShow(id, store.access_token);\n    console.log(response);\n    if (response.status === 200) {\n      setArchiveInUser(true);\n    }\n  };\n\n  const handleUnarchiveShow = async () => {\n    const response = await betaseriesAPI.unarchiveShow(id, store.access_token);\n    console.log(response);\n    if (response.status === 200) {\n      setArchiveInUser(false);\n    }\n  };\n\n\n  return (\n    <>\n      <NoSsr>\n        <GoogleFontLoader\n          fonts={[\n            { font: 'Spartan', weights: [300] },\n            { font: 'Montserrat', weights: [200, 400, 700] },\n          ]}\n        />\n      </NoSsr>\n      <Dialog\n        open={showDetails}\n        TransitionComponent={Transition}\n        onClose={handleClose}\n        // keepMounted\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n        maxWidth=\"md\"\n      >\n\n        <div className={classes.bannerWrapper}>\n          <h1 className={`${classes.bannerTitle} ${classes.bannerItem}`}>{title}</h1>\n          <span className={`${classes.bannerBottomLeft} ${classes.bannerItem} ${classes.bannerBottomText}`}>Noté {notes.mean.toFixed(1)} sur 5</span>\n          <span className={`${classes.bannerItem} ${classes.bannerBottomRight} ${classes.bannerBottomText}`}>{creation}</span>\n          <img className={classes.bannerImg} src={images.show} alt=\"show-banner\"></img>\n        </div>\n        <DialogContent>\n          <div className={classes.content}>\n            <Grid container spacing={5} justify=\"space-between\">\n              <Grid item xs={12} md={7}>\n                <span className={classes.tag}>Description</span>\n                <p style={{ color: '#333', fontSize: '1.2rem' }}>{description}</p>\n              </Grid>\n              <Grid item xs={12} md={4}>\n                <div className={classes.metaDataRight}>\n                  <div className={classes.tagWrapper}>\n                    <span className={classes.tag}>Rating: </span><span> {rating}</span>\n                  </div>\n                  <div className={classes.tagWrapper}>\n                    <span className={classes.tag}>Nombre de saisons: </span><span> {seasons}</span>\n                  </div>\n                  <div className={classes.tagWrapper}>\n                    <span className={classes.tag}>Nombre total d'épisodes: </span><span>{episodes}</span>\n                  </div>\n                  <div className={classes.tagWrapper}>\n                    <span className={classes.tag}>Durée d'un épisode: </span><span> {length} min</span>\n                  </div>\n                  <div className={classes.tagWrapper}>\n                    <span className={classes.tag}>Genres: </span><span> {Object.values(genres).join(', ')}</span>\n                  </div>\n                </div>\n              </Grid>\n            </Grid>\n          </div>\n        </DialogContent>\n        <DialogActions className={classes.dialogActions}>\n          <div style={{ transform: 'scale(0.8)', transformOrigin: '0 50%', marginLeft: '10px' }}>\n            <Box className={gutterStyles.parent}>\n              <div className={gutterStyles.btnWrapper}>\n                {\n                  store.user &&\n                  (<Button classes={arrowBtnStyle} onClick={handleClick}>\n                    {inUser ? <CheckIcon /> : <AddIcon />}\n                  </Button>)\n                }\n                {isLoading && !inUser && <CircularProgress size=\"100%\" className={gutterStyles.fabProgress} />}\n              </div>\n              {inUser &&\n                (\n                  !archiveInUser\n                    ?\n                    <div className={gutterStyles.btnWrapper}>\n                      <Button classes={arrowBtnStyle} onClick={handleArchiveClick}>\n                        <ArchiveIcon />\n                      </Button>\n                    </div>\n                    :\n                    <div className={gutterStyles.btnWrapper}>\n                      <Button classes={arrowBtnStyle} onClick={handleUnarchiveShow}>\n                        <RestoreFromTrashIcon />\n                      </Button>\n                    </div>\n                )\n\n              }\n              <div className={gutterStyles.btnWrapper}>\n                <Button classes={arrowBtnStyle} onClick={() => history.push(`/shows/${id}`)}>\n                  <ArrowForwardIcon />\n                </Button>\n              </div>\n            </Box>\n          </div>\n          <div style={{ transform: 'scale(0.7)' }}>\n            <Button classes={arrowBtnStyle} onClick={handleClose}>\n              <KeyboardArrowDown />\n            </Button>\n          </div>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n})\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useStore } from '../../store/store';\nimport { betaseriesAPI } from '../../services/betaseriesAPI';\nimport GoogleFontLoader from 'react-google-font-loader';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport { Grow, CardMedia, Card, Box, makeStyles } from '@material-ui/core';\nimport {\n  Info,\n  InfoCaption,\n  InfoSubtitle,\n  InfoTitle,\n} from '@mui-treasury/components/info';\nimport { useGalaxyInfoStyles } from '@mui-treasury/styles/info/galaxy';\nimport { useCoverCardMediaStyles } from '@mui-treasury/styles/cardMedia/cover';\n\nimport CardButtons from './cardButtons';\nimport CardDetails from './cardDetails';\n// const CardDetails = React.lazy(() => import('./cardDetails'));\n\n\nconst useStyles = makeStyles(() => ({\n  card: {\n    // cursor: 'pointer',\n    borderRadius: '5px',\n    boxShadow: 'none',\n    position: 'relative',\n    minWidth: 200,\n    minHeight: 360,\n    '&:after': {\n      content: '\"\"',\n      display: 'block',\n      position: 'absolute',\n      width: '100%',\n      height: '64%',\n      bottom: 0,\n      zIndex: 1,\n      background: 'linear-gradient(to top, #000, rgba(0,0,0,0))',\n      transition: 'height 0.2s ease-in'\n    },\n    '&:hover': {\n      '&:after': {\n        height: '300%',\n        transition: 'height 0.9s 0.1s ease-out'\n      },\n      '& $backImg': {\n        transform: 'scale(1.06)',\n        transition: 'transform 0.5s 0.1s',\n      }\n    }\n  },\n  content: {\n    position: 'absolute',\n    zIndex: 2,\n    bottom: 0,\n    width: '91%',\n  },\n  buttonBox: {\n    // display: 'flex'\n  },\n  backImg: {\n    transition: 'transform 0.4s',\n  }\n}));\n\nconst GalaxyCard = React.memo(function GalaxyCard({ show }) {\n  const { title, images: { poster }, seasons, id, notes, creation, genres, rating } = show;\n  const [store, dispatch] = useStore();\n  const mediaStyles = useCoverCardMediaStyles({ bgPosition: 'top' });\n  const styles = useStyles();\n  const [isHovered, setIsHovered] = useState(false);\n  const [inUser, setInUser] = useState(false);\n  const [showDetails, setShowDetails] = useState(false);\n  const renderModal = useRef(false);\n\n  const handleAddShow = useCallback(async () => {\n    const response = await betaseriesAPI.addShowToUser(id, store.access_token);\n    if (response.status === 200) {\n      setInUser(true);\n    }\n  }, []);\n\n  const handleRemoveShow = useCallback(async () => {\n    const response = await betaseriesAPI.removeShowToUser(id, store.access_token);\n    if (response.status === 200) {\n      setInUser(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (renderModal.current === false) {\n      renderModal.current = true;\n    }\n  }, [showDetails])\n\n  return (\n    <>\n      <NoSsr>\n        <GoogleFontLoader\n          fonts={[\n            { font: 'Spartan', weights: [300] },\n            { font: 'Montserrat', weights: [200, 400, 700] },\n          ]}\n        />\n      </NoSsr>\n      {renderModal.current &&\n        <CardDetails \n        showDetails={showDetails} \n        setShowDetails={setShowDetails} \n        show={show} \n        store={store} \n        inUser={inUser} \n        handleAddShow={handleAddShow} \n        handleRemoveShow={handleRemoveShow} \n        />}\n      <Card className={styles.card} onMouseOver={() => setIsHovered(true)} onMouseLeave={() => setIsHovered(false)}>\n        <CardMedia\n          classes={mediaStyles}\n          className={styles.backImg}\n          image={poster}\n        />\n        <Grow in={!isHovered} {...(isHovered ? { timeout: 400 } : { timeout: 500 })}>\n          <Box py={3} px={2} className={styles.content}>\n            <Info useStyles={useGalaxyInfoStyles}>\n              <InfoTitle>{title}</InfoTitle>\n              {/* <InfoSubtitle>{seasons} saisons</InfoSubtitle> */}\n              <InfoCaption>{seasons} saisons</InfoCaption>\n            </Info>\n          </Box>\n        </Grow>\n\n        <Grow in={isHovered} {...(isHovered ? { timeout: 600 } : { timeout: 200 })}>\n          <Box py={1} px={1} className={`${styles.content} ${styles.buttonBox}`} style={{ width: '96%', height: '96%' }}>\n            <Info useStyles={useGalaxyInfoStyles}>\n              <InfoTitle style={{ margin: '0.8rem 0 2rem' }}>{title}</InfoTitle>\n              <InfoSubtitle><b>Note</b> : {notes.mean.toFixed(2)} / 5 </InfoSubtitle>\n              <InfoSubtitle><b>Diffusé en</b> : {creation}</InfoSubtitle>\n              <InfoSubtitle><b>Rating</b> : {rating}</InfoSubtitle>\n              <InfoSubtitle><b>Genres</b> : {Object.values(genres).join(', ')}</InfoSubtitle>\n            </Info>\n            <CardButtons store={store} handleAddShow={handleAddShow} handleRemoveShow={handleRemoveShow} setShowDetails={setShowDetails} inUser={inUser} />\n          </Box>\n        </Grow>\n      </Card>\n    </>\n  );\n});\n\nexport default GalaxyCard","import React, { useEffect, useState } from 'react';\nimport { betaseriesAPI } from '../../../services/betaseriesAPI';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, Grid, Button, Box, TextField } from '@material-ui/core';\nimport { Pagination } from '@material-ui/lab';\nimport PosterCard from '../../card/posterCard';\n\nconst params = {\n    limit: 20,\n    start: 0\n};\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        width: '250px',\n    },\n    center: {\n        textAlign: 'center',\n    },\n    textfield: {\n        width: '100%',\n        margin: '20px 0',\n    }\n}));\n\nexport default function GetAllShows() {\n    const classes = useStyles();\n    const [allShows, setAllShows] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [showsStarting, setShowsStarting] = useState(\"\");\n    const [inputSearch, setInputSearch] = useState(\"\");\n\n    const showShows = async () => {\n        const res = await betaseriesAPI.getAllShows(params);\n\n        if (res.status === 200) {\n            console.log(res);\n            setAllShows(res.data.shows);\n            setIsLoading(false);\n        } else {\n            console.log(res.data);\n        }\n    }\n\n    useEffect(() => {\n        showShows();\n    }, []);\n\n    useEffect(() => {\n        let timeOut;\n        if (inputSearch != \"\") {\n            timeOut = setTimeout(() => {\n                betaseriesAPI.getAllShowsWith({ ...params, title: inputSearch }).then(res => {\n                    setShowsStarting(res.data.shows);\n                }).catch(err => {\n                    console.log(err);\n                }).finally(() => {\n                    setIsLoading(false);\n                });\n            }, 2000);\n        }\n        return () => clearTimeout(timeOut);\n\n    }, [inputSearch]);\n\n    const pagePrev = () => {\n        params.start = params.start - 20;\n        showShows();\n    }\n\n    const pageNext = () => {\n        params.start = params.start + 20;\n        showShows();\n    }\n\n    const handleInput = (event) => {          \n        if (event.target.value === \"\") {\n            showShows();\n        } else {\n            setInputSearch(event.target.value);\n            setIsLoading(true);\n        }\n    }\n\n    // if isLoading ? loading de material : \n    // inputSearch ...\n\n    return (\n        <Container className={classes.container} maxWidth={'xl'}>\n            <TextField label=\"Rechercher une série\" variant=\"outlined\" className={classes.textfield} onChange={handleInput} />\n            {isLoading ? <h1>Loading...</h1>\n            :\n            (inputSearch === \"\" ?\n                <>\n                    <Grid container spacing={4}>\n                        {allShows && allShows.map((show) => {\n                            return (\n                                <Grid item xs={12} sm={6} md={4} lg={3} xl={2} key={show.id} className={classes.card}>\n                                    <PosterCard show={show} />\n                                </Grid>\n                            );\n                        })}\n                    </Grid>\n                    <Box m={5} className={classes.center}>\n                        <Box component=\"span\" m={1}>\n                            <Button variant=\"outlined\" onClick={pagePrev}>Prev</Button>\n                        </Box>\n\n                        {/* <Pagination count={10} shape=\"rounded\" onChange={handlePagination}/> */}\n\n                        <Box component=\"span\" m={1}>\n                            <Button variant=\"outlined\" onClick={pageNext}>Next</Button>\n                        </Box>\n                    </Box>\n                </>\n                :\n                <>\n                    <Grid container spacing={4}>\n                        {showsStarting && showsStarting.map((show) => {\n                            return (\n                                <Grid item xs={12} sm={6} md={4} lg={3} xl={2} key={show.id} className={classes.card}>\n                                    <PosterCard show={show} />\n                                </Grid>\n                            );\n                        })}\n                    </Grid>\n                    <Box m={5} className={classes.center}>\n                        <Box component=\"span\" m={1}>\n                            <Button variant=\"outlined\" onClick={pagePrev}>Prev</Button>\n                        </Box>\n\n                        {/* <Pagination count={10} shape=\"rounded\" onChange={handlePagination}/> */}\n\n                        <Box component=\"span\" m={1}>\n                            <Button variant=\"outlined\" onClick={pageNext}>Next</Button>\n                        </Box>\n                    </Box>\n                </>)\n            }\n\n        </Container>\n    )\n}","import React, { useMemo, useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { betaseriesAPI } from '../../../services/betaseriesAPI'\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Box } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginBottom: '1rem',\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    divider: {\n        margin: theme.spacing(2, 0),\n    },\n}));\n\nexport default function OutlinedCard({ episode, store, inUser, getAllEpisodes, setEpisode }) {\n    const { title, date, description, note, user, id } = episode;\n    const classes = useStyles();\n\n    const localDate = useMemo(() => {\n        const myDate = new Date(date);\n        return myDate.toLocaleDateString(store.user?.locale, { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' });\n    }, [date, store]);\n\n    const handleCheckBox = async (event) => {\n        event.stopPropagation();\n        const response = !user.seen\n            ?\n            await betaseriesAPI.addEpisodeWatched(id, store.access_token)\n            :\n            await betaseriesAPI.removeEpisodeWatched(id, store.access_token)\n            ;\n        if (response.status === 200) {\n            getAllEpisodes();\n        }\n    }\n\n    const addOneEpisode = async () => {\n        const response = await betaseriesAPI.addEpisodeWatched(id, store.access_token, false);\n        if (response.status === 200) {\n            getAllEpisodes();\n        }\n    }\n\n    return (\n        <>\n            <div className={classes.root}>\n                <Accordion variant=\"outlined\">\n                    <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-label=\"Expand\"\n                        aria-controls=\"additional-actions1-content\"\n                        id=\"additional-actions1-header\"\n                    >\n                        {\n                            store.user && inUser &&\n                            <FormControlLabel\n                                aria-label=\"Seen\"\n                                onClick={handleCheckBox}\n                                onFocus={(event) => event.stopPropagation()}\n                                control={<Checkbox checked={user.seen} />}\n                            />\n                        }\n                        <div>\n                            <Typography variant=\"h6\" component=\"h5\">{title}</Typography>\n                            <Typography color=\"textSecondary\">{localDate}</Typography>\n                        </div>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                        <div>\n                            <Typography color=\"textSecondary\">{description}</Typography>\n                            <Divider className={classes.divider} />\n                            <Grid container justify=\"space-between\" alignItems=\"center\">\n                                <h3>Note: {note.mean.toFixed(1)} / 5</h3>\n                                {store.user && inUser &&\n                                    (<div>\n                                        {\n                                            !user.seen &&\n                                            <Button style={{ marginRight: '1rem' }} variant=\"contained\" disableElevation onClick={addOneEpisode}>Marquer uniquement cet épisode</Button>\n                                        }\n                                        <Button variant=\"contained\" disableElevation onClick={() => setEpisode(episode)}>Commentaires</Button>\n                                    </div>)\n                                }\n\n                            </Grid>\n                        </div>\n                    </AccordionDetails>\n                </Accordion>\n            </div>\n        </>\n    );\n};\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { betaseriesAPI } from '../../../services/betaseriesAPI';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\n\nexport default function AlertDialog({ setEpisode, episode, store }) {\n    const [comments, setComments] = useState(null);\n    const [commentInput, setCommentInput] = useState(\"\");\n\n    const handleClose = () => {\n        setEpisode(false);\n    };\n\n    const getEpisodeDetails = async () => {\n        const response = await betaseriesAPI.getEpisodeComments(episode.id, store.access_token);\n        if (response.status === 200) {\n            setComments(response.data.comments);\n        }\n        console.log(response);\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const response = await betaseriesAPI.commentEpisode(episode.id, commentInput, store.access_token);\n        console.log(response);\n        if(response.status === 200) {\n            getEpisodeDetails();\n        }\n    }\n\n    useEffect(() => {\n        getEpisodeDetails();\n    }, [])\n\n    const localDate = useCallback((date) => {\n        const myDate = new Date(date);\n        return myDate.toLocaleDateString(store.user?.locale, { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' });\n    }, [comments, store]);\n\n    // console.log(episode);\n\n    return (\n        <>\n            <DialogTitle id=\"alert-dialog-title\">Commentaires</DialogTitle>\n            <DialogContent>\n                {\n                    comments\n                        ?\n                        comments.map(comment =>\n                            (\n                                <>\n                                    <div style={{ display: 'flex' }}>\n                                        <h3 style={{ margin: '0 0 20px 0' }}>{comment.login}</h3><span> - Posté le {localDate(comment.date)}</span>\n                                    </div>\n                                    <p>{comment.text}</p>\n                                    <Divider style={{ margin: '20px' }} />\n                                </>\n                            )\n                        )\n                        :\n                        <h1>Pas de commentaires</h1>\n                }\n                <form style={{ padding: '0px 20px', marginTop: '4rem' }}>\n                    <TextField\n                        margin=\"dense\"\n                        id=\"comment\"\n                        label=\"Commenter\"\n                        type=\"text\"\n                        fullWidth\n                        multiline={true}\n                        onChange={(e) => { setCommentInput(e.target.value); }}\n                    />\n                    <div>\n\n                        <Button\n                            type=\"submit\"\n                            onClick={handleSubmit}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            style={{ margin: '35px auto 10px auto', display: 'block' }}\n                        >\n                            Envoyer\n                        </Button>\n                    </div>\n                </form>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"primary\" autoFocus>\n                    Fermer\n                </Button>\n            </DialogActions>\n        </>\n    );\n}","import React, { useState, useEffect, useCallback } from 'react'\nimport { betaseriesAPI } from '../../../services/betaseriesAPI';\nimport { useStore } from '../../../store/store';\nimport { useRouteMatch, Link } from \"react-router-dom\";\nimport { Container, Grid, Dialog, Slide } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Box, CircularProgress } from '@material-ui/core';\nimport { useArrowWhiteButtonStyles } from '@mui-treasury/styles/button/arrowWhite';\nimport AddIcon from '@material-ui/icons/Add';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ArchiveIcon from '@material-ui/icons/Archive';\nimport RestoreFromTrashIcon from '@material-ui/icons/RestoreFromTrash';\n\nimport ListEpisode from './listEpisode';\nimport Comments from './comments'\n\nconst useStyles = makeStyles({\n  media: {\n    height: 360,\n    position: 'relative',\n    '&:after': {\n      content: '\"\"',\n      display: 'block',\n      position: 'absolute',\n      width: '100%',\n      height: '64%',\n      bottom: 0,\n      zIndex: 1,\n      background: 'linear-gradient(to top, #000, rgba(0,0,0,0))',\n    }\n  },\n  tag: {\n    color: 'rgba(0, 0, 0, 0.54)',\n  },\n  metaDataRight: {\n    fontSize: '1.1rem',\n  },\n  tagWrapper: {\n    marginBottom: '9px',\n  },\n  bannerWrapper: {\n    position: 'relative',\n  },\n  parent: {\n    display: 'flex',\n    position: 'absolute',\n    zIndex: 30,\n    bottom: '10px',\n    right: '10px',\n    transform: 'scale(0.8)',\n  },\n  fabProgress: {\n    color: 'white',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    zIndex: 1,\n    marginRight: 'auto',\n    marginLeft: 'auto',\n  },\n  btnWrapper: {\n    position: 'relative',\n    marginLeft: '1.3rem',\n  },\n  title: {\n    position: 'absolute',\n    bottom: '10px',\n    left: '20px',\n    color: 'white',\n    zIndex: 30,\n  }\n});\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function ShowDetails() {\n  const idShow = useRouteMatch(\"/shows/:id\").params.id;\n  const classes = useStyles();\n  const arrowBtnStyle = useArrowWhiteButtonStyles();\n  const [store, dispatch] = useStore();\n  const [show, setShow] = useState(null);\n  const [episodes, setEpisodes] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [archiveInUser, setArchiveInUser] = useState(false);\n  const [inUser, setInUser] = useState(false);\n  const [episode, setEpisode] = useState(false);\n\n  const handleClick = () => {\n    if (isLoading) {\n      return;\n    }\n\n    if (!inUser) {\n      setIsLoading(true);\n      handleAddShow();\n    } else {\n      setIsLoading(true);\n      handleRemoveShow();\n    }\n  }\n\n  const handleArchiveClick = () => {\n    if (!archiveInUser) {\n      handleArchiveShow();\n    } else {\n      handleUnarchiveShow();\n    }\n  }\n\n  const handleArchiveShow = async () => {\n    const response = await betaseriesAPI.archiveShow(show.id, store.access_token);\n    console.log(response);\n    if (response.status === 200) {\n      setArchiveInUser(true);\n    }\n  };\n\n  const handleUnarchiveShow = async () => {\n    const response = await betaseriesAPI.unarchiveShow(show.id, store.access_token);\n    console.log(response);\n    if (response.status === 200) {\n      setArchiveInUser(false);\n    }\n  };\n\n  const handleAddShow = async () => {\n    const response = await betaseriesAPI.addShowToUser(show.id, store.access_token);\n    if (response.status === 200) {\n      setInUser(true);\n    }\n  };\n\n  const handleRemoveShow = async () => {\n    const response = await betaseriesAPI.removeShowToUser(show.id, store.access_token);\n    if (response.status === 200) {\n      setInUser(false);\n    }\n  };\n\n  const getAllEpisodes = async () => {\n    const response = await betaseriesAPI.getShowEpisodes(idShow, store.access_token);\n    console.log('episodes');\n    console.log(store.access_token);\n    console.log(response);\n    if (response.status === 200) {\n      setEpisodes(response.data.episodes);\n    }\n  };\n\n  useEffect(() => {\n    if (!store.user_loading) {\n      (async () => {\n        const response = await betaseriesAPI.getShowDetails(idShow, store.access_token);\n        if (response.status === 200) {\n          setShow(response.data.show);\n          setInUser(response.data.show.in_account);\n          setArchiveInUser(response.data.show.user.archived);\n        }\n      })();\n\n      getAllEpisodes();\n    }\n  }, [store.user_loading, store.user]);\n\n  useEffect(() => {\n    setIsLoading(false);\n  }, [inUser]);\n\n  return (\n    <>\n      { show && episodes &&\n        <>\n          <Container maxWidth=\"md\">\n            <Grid container spacing={3}>\n              <Grid item xs={12}>\n                <Card>\n                  <CardMedia\n                    className={classes.media}\n                    image={show.images.show}\n                  >\n                    <Box className={classes.parent}>\n                      <div className={classes.btnWrapper}>\n                        {\n                          store.user &&\n                          (<Button classes={arrowBtnStyle} onClick={handleClick}>\n                            {inUser ? <CheckIcon /> : <AddIcon />}\n                          </Button>)\n                        }\n                        {isLoading && !inUser && <CircularProgress size=\"100%\" className={classes.fabProgress} />}\n                      </div>\n                      {inUser &&\n                        (\n                          !archiveInUser\n                            ?\n                            <div className={classes.btnWrapper}>\n                              <Button classes={arrowBtnStyle} onClick={handleArchiveClick}>\n                                <ArchiveIcon />\n                              </Button>\n                            </div>\n                            :\n                            <div className={classes.btnWrapper}>\n                              <Button classes={arrowBtnStyle} onClick={handleUnarchiveShow}>\n                                <RestoreFromTrashIcon />\n                              </Button>\n                            </div>\n                        )\n                      }\n                    </Box>\n                    <Typography className={classes.title} gutterBottom variant=\"h4\" component=\"h4\">\n                      {show.title}\n                    </Typography>\n                  </CardMedia>\n                  <CardContent>\n                    <Grid container spacing={5} justify=\"space-between\">\n                      <Grid item xs={12} md={7}>\n                        <p style={{ color: '#333', fontSize: '1.2rem', marginTop: '0px' }}>{show.description}</p>\n                      </Grid>\n                      <Grid item xs={12} md={4}>\n                        <div className={classes.metaDataRight}>\n                          <div className={classes.tagWrapper}>\n                            <span className={classes.tag}>Note: </span><span> {show.notes.mean.toFixed(1)} / 5</span>\n                          </div>\n                          <div className={classes.tagWrapper}>\n                            <span className={classes.tag}>Rating: </span><span> {show.rating}</span>\n                          </div>\n                          <div className={classes.tagWrapper}>\n                            <span className={classes.tag}>Nombre de saisons: </span><span> {show.seasons}</span>\n                          </div>\n                          <div className={classes.tagWrapper}>\n                            <span className={classes.tag}>Nombre total d'épisodes: </span><span>{show.episodes}</span>\n                          </div>\n                          <div className={classes.tagWrapper}>\n                            <span className={classes.tag}>Durée d'un épisode: </span><span> {show.length} min</span>\n                          </div>\n                          <div className={classes.tagWrapper}>\n                            <span className={classes.tag}>Genres: </span><span> {Object.values(show.genres).join(', ')}</span>\n                          </div>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  </CardContent>\n                </Card>\n              </Grid>\n\n\n\n              <Grid item xs={12}>\n                <Card>\n                  <CardContent>\n\n                    <h1 style={{ textAlign: 'center' }}>Episodes</h1>\n                    {episodes.map(episode => {\n                      return episode.episode === 1\n                        ?\n                        (<div key={episode.id}>\n                          <h1 style={{ margin: '40px 0 20px' }}>Saison {episode.season}</h1>\n                          <ListEpisode setEpisode={setEpisode} episode={episode} store={store} inUser={inUser} getAllEpisodes={getAllEpisodes} />\n                        </div>)\n                        :\n                        (<div key={episode.id}>\n                          <ListEpisode setEpisode={setEpisode} episode={episode} store={store} inUser={inUser} getAllEpisodes={getAllEpisodes} />\n                        </div>)\n                    })\n                    }\n                  </CardContent>\n                </Card>\n              </Grid>\n            </Grid>\n          </Container>\n\n\n          <Dialog\n            open={!!episode}\n            TransitionComponent={Transition}\n            onClose={() => setEpisode(v => !v)}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n            maxWidth=\"md\"\n            fullWidth\n          >\n            <Comments setEpisode={setEpisode} episode={episode} store={store} />\n          </Dialog>\n        </>\n      }\n    </>\n  )\n}","import React, { useEffect, useState, useRef } from 'react';\nimport { useStore } from '../../../store/store';\nimport { Container, Typography, makeStyles } from '@material-ui/core';\nimport Swiper, { Pagination, Navigation } from 'swiper';\nimport { betaseriesAPI } from '../../../services/betaseriesAPI';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nimport 'swiper/swiper-bundle.css';\nimport './home.css';\n\nimport PosterCard from '../../card/posterCard';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        overflowX: 'hidden',\n        marginBottom: theme.spacing(10),\n    },\n    title: {\n        marginBottom: \"15px\",\n        fontWeight: 100\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n    slideCard: {\n        padding: '12px',\n    }\n}));\n\nconst swiperSettings = {\n    slidesPerView: 1,\n    pagination: {\n        el: '.swiper-pagination',\n        clickable: true,\n    },\n    spaceBetween: 10,\n    initialSlide: 0,\n    resistanceRatio: 0,\n    threshold: 40,\n    longSwipesRatio: 0.1,\n    navigation: { nextEl: '.swiper-button-next', prevEl: '.swiper-button-prev' },\n    breakpoints: {\n        600: { slidesPerView: 2, spaceBetween: 24, slidesPerGroup: 2 },\n        960: { slidesPerView: 3, spaceBetween: 24, slidesPerGroup: 3 },\n        1280: { slidesPerView: 4, spaceBetween: 24, slidesPerGroup: 4 },\n        1600: { slidesPerView: 6, spaceBetween: 24, slidesPerGroup: 6 },\n    }\n}\n\nexport default function CenteredGrid() {\n    const [store, dispatch] = useStore();\n    const classes = useStyles();\n    const [showsToDiscover, setShowsToDiscover] = useState([]);\n    const [moviesToDiscover, setMoviesToDiscover] = useState([]);\n    const swiper = useRef();\n    const swiper2 = useRef();\n    \n    useEffect(() => {\n        Swiper.use([Pagination, Navigation]);\n        swiper.current = new Swiper('.swiper1', swiperSettings);\n        swiper2.current = new Swiper('.swiper2', swiperSettings);\n    }, []);\n\n    useEffect(() => {\n        if (!store.user_loading) {\n            (async () => {\n                const response = await betaseriesAPI.getShowsToDiscover(store.access_token);\n                if (response.status === 200) {\n                    console.log(response.data);\n                    setShowsToDiscover(response.data.shows);\n                    swiper.current.update();\n                }\n            })();\n\n            // (async () => {\n            //     const response = await betaseriesAPI.getMoviesToDiscover();\n            //     if (response.status === 200) {\n            //         const movie = await betaseriesAPI.getMovieDetails(response.data.movies[0].id);\n            //         // console.log(movie);\n            //         // setMoviesToDiscover(response.data.shows);\n            //         // swiper2.current.update();\n            //     }\n            // })();\n        }\n    }, [store.user_loading, store.user]);\n    \n    return (\n        <>\n            {/* <CardDetails /> */}\n            <Container className={classes.container} maxWidth={'xl'}>\n                <Typography className={classes.title} variant=\"h4\" align=\"left\">Séries à découvrir</Typography>\n                <div className=\"swiper-container swiper1\" >\n                    <div className=\"swiper-wrapper\">\n                        {\n                            showsToDiscover.length > 0\n                                ?\n                                showsToDiscover.map(show => (\n                                    <div key={show.id} className=\"swiper-slide\">\n                                        <PosterCard show={show} />\n                                    </div>\n                                ))\n                                :\n                                [...Array(6)].map((val, i) => (\n                                    <div key={i} className=\"swiper-slide\">\n                                        <Skeleton variant=\"rect\" width=\"100%\" height=\"360px\"></Skeleton>\n                                    </div>))\n                        }\n                    </div>\n                    <div className=\"swiper-pagination\"></div>\n                    <div className=\"swiper-button-next\"></div>\n                    <div className=\"swiper-button-prev\"></div>\n                </div>\n            </Container>\n            {/* <Container className={classes.container} maxWidth={'xl'}>\n                <Typography className={classes.title} variant=\"h4\" align=\"left\">Films à découvrir</Typography>\n                <div className=\"swiper-container swiper2\" >\n                    <div className=\"swiper-wrapper\">\n                        {\n                            moviesToDiscover.length > 0\n                                ?\n                                moviesToDiscover.map(movie => (\n                                    <div key={movie.id} className=\"swiper-slide\">\n                                        <PosterCard movie={movie} />\n                                    </div>\n                                ))\n                                :\n                                [...Array(6)].map((val, i) => (\n                                    <div key={i} className=\"swiper-slide\">\n                                        <Skeleton variant=\"rect\" width=\"100%\" height=\"360px\"></Skeleton>\n                                    </div>))\n                        }\n                    </div>\n                    <div className=\"swiper-pagination\"></div>\n                    <div className=\"swiper-button-next\"></div>\n                    <div className=\"swiper-button-prev\"></div>\n                </div>\n            </Container> */}\n        </>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { useRouteMatch, Link, useLocation } from \"react-router-dom\";\nimport { Container, Grid, Paper, Avatar, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { betaseriesAPI } from '../../../services/betaseriesAPI';\nimport { useStore } from '../../../store/store';\nimport { authService } from '../../../services/authService';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n    upperCase: {\n        textTransform: 'upperCase',\n    },\n    large: {\n        width: '100%',\n        height: '100%',\n    },\n    timeP: {\n        fontSize: '12px',\n    },\n    mt38: {\n        marginTop: '38px',\n    },\n    mt18: {\n        marginTop: '18px',\n    },\n    suivis: {\n        width: '50%',\n        float: 'left',\n    },\n}));\n\nexport default function Profil() {\n    const classes = useStyles();\n    const access_token = authService.getToken();\n    const [store, storeDispatch] = useStore();\n    const [userInfo, setUserInfo] = useState(null);\n    const [isNotFriend, setIsNotFriend] = useState(true);\n    const [friendsBloqued, setFriendsBloqued] = useState(null);\n    const [userFriends, setUserFriends] = useState(null);\n\n    let idUser = useRouteMatch(\"/profil/:id\").params.id;\n    let URL = useLocation().pathname;\n\n    useEffect(() => {\n        betaseriesAPI.getUserInfoById(idUser).then(res => {\n            setUserInfo(res.data.member);\n        }).catch(err => {\n            console.log(err);\n        });\n        setIsNotFriend(true);\n\n        betaseriesAPI.friendList(idUser, access_token).then(res => {\n            setUserFriends(res.data.users);\n        }).catch(err => {\n            console.log(err);\n        });\n    }, [idUser]);\n\n    useEffect(() => {\n        if (store.user) {\n            betaseriesAPI.friendList(store.user.id, access_token).then(res => {\n                const found = res.data.users.find(element => element.id == idUser);\n                if (found !== undefined) {\n                    setIsNotFriend(false);\n                }\n            }).catch(err => {\n                console.log(err);\n            });\n\n            listeBlockedFriends();\n        }\n    }, [store]);\n\n    function listeBlockedFriends() {\n        betaseriesAPI.friendListBlocked(access_token, true).then(res => {\n            setFriendsBloqued(res.data.users);\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    function TimeToWatching(time) {\n        var hours = Math.floor(time / 60);\n        var minutes = time % 60;\n\n        if (hours > 24) {\n            var day = 0;\n            while (hours > 24) {\n                hours = hours - 24;\n                day = day + 1;\n            }\n            return `${day} jours ${hours} heures et ${minutes} minutes`;\n        } else {\n            return `${hours} heures et ${minutes} minutes`;\n        }\n    }\n\n    const handleClickAdd = () => {\n        betaseriesAPI.addFriend(userInfo.id, access_token).then(res => {\n            setIsNotFriend(false);\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    const handleClickDelete = () => {\n        betaseriesAPI.deleteFriend(userInfo.id, access_token).then(res => {\n            setIsNotFriend(true);\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    const handleClickBlocked = () => {\n        betaseriesAPI.blockFriend(userInfo.id, access_token).then(res => {\n            listeBlockedFriends();\n            setIsNotFriend(true);\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n    \n    const handleClickDeblocked = () => {\n        betaseriesAPI.deblockFriend(userInfo.id, access_token).then(res => {\n            listeBlockedFriends();\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n    \n    return (\n        <>\n            { userInfo != null &&\n                <Container maxWidth={'lg'}>\n                    <Grid container spacing={4}>\n                        <Grid item xs={12}>\n                            <Paper className={classes.paper}>\n                                Resumé de <span className={classes.upperCase}>{userInfo.login}</span>\n                                {store.user && store.user.id !== userInfo.id &&\n                                    (isNotFriend ?\n                                        friendsBloqued && userInfo.id && friendsBloqued.find(element => element.id === userInfo.id) ?\n                                            <Button variant=\"contained\" color=\"primary\" onClick={handleClickDeblocked} >\n                                                Débloquer\n                                            </Button>\n                                            :\n                                            <Button variant=\"contained\" color=\"primary\" onClick={handleClickAdd}>\n                                                Suivre\n                                            </Button>\n                                        :\n                                        <>\n                                            <Button variant=\"contained\" onClick={handleClickBlocked}>\n                                                Bloquer\n                                            </Button>\n                                            <Button variant=\"contained\" color=\"secondary\" onClick={handleClickDelete}>\n                                                Supprimer\n                                            </Button>\n                                        </>)\n                                }\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={2}>\n                            <Paper className={classes.paper}>\n                                <Avatar variant=\"rounded\" alt=\"profile-pic\" src={userInfo.avatar} className={classes.large} />\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={2}>\n                            <Paper className={classes.paper}>\n                                <span>{userInfo.stats.episodes}<br />ÉPISODE</span>\n                            </Paper>\n                            <Paper className={`${classes.paper} ${classes.mt38}`}>\n                                <span>{userInfo.stats.shows}<br />SÉRIES</span>\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={2}>\n                            <Paper className={classes.paper}>\n                                <span>{userInfo.xp}<br />XP</span>\n                            </Paper>\n                            <Paper className={`${classes.paper} ${classes.mt38}`}>\n                                <span>{userInfo.stats.badges}<br />BADGES</span>\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Paper className={classes.paper}>\n                                <span>Temps passé devant la télé:</span><br />\n                                <span>{TimeToWatching(userInfo.stats.time_on_tv)}</span><br />\n                                <span className={classes.timeP}>Encore {TimeToWatching(userInfo.stats.time_to_spend)}</span>\n                            </Paper>\n                            <Paper className={`${classes.paper} ${classes.mt18}`}>\n                                <span>{userFriends && userFriends.length}<br />\n                                    <Link to={`${URL}/friends`}>SUIVIS</Link>\n                                </span>\n                            </Paper>\n                        </Grid>\n                        {store.user && store.user.id === userInfo.id &&\n                            <Grid item xs={12}>\n                                <Paper className={classes.paper}>\n                                    <span>\n                                        Personnes Bloquer:\n                                    <br />\n                                        {friendsBloqued && friendsBloqued.length > 0 ?\n                                            friendsBloqued.map((e) => {\n                                                return (\n                                                    <Paper key={e.id} className={`${classes.paper} ${classes.mt18}`}>\n                                                        <Link to={`/profil/${e.id}`} ><p>{e.login}</p></Link>\n                                                    </Paper>\n                                                )\n                                            })\n                                            :\n                                            <Paper className={`${classes.paper} ${classes.mt18}`}>\n                                                <p>Aucun amis bloqué pour le moment !</p>    \n                                            </Paper>\n                                        }\n                                    </span>\n                                </Paper>\n                            </Grid>\n                        }\n                    </Grid>\n                </Container>\n            }\n        </>\n    );\n}","import React, { useEffect, useState, Fragment } from 'react';\nimport { Container, Grid, Paper } from '@material-ui/core';\nimport { useRouteMatch, Link, useHistory } from \"react-router-dom\";\nimport { betaseriesAPI } from '../../../services/betaseriesAPI';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { authService } from '../../../services/authService';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n    upperCase: {\n        textTransform: 'upperCase',\n    },\n    large: {\n        width: '100%',\n        height: '100%',\n    },\n    timeP: {\n        fontSize: '12px',\n    },\n    mt38: {\n        marginTop: '38px',\n    },\n    mt18: {\n        marginTop: '18px',\n    },\n    textLeft: {\n        textAlign: 'left',\n    },\n    floatRight: {\n        float: 'right',\n    },\n}));\n\nexport default function Amis() {\n    const history = useHistory();\n    const classes = useStyles();\n    const access_token = authService.getToken();\n    const [allMembers, setAllMembers] = useState([]);\n    const [value, setValue] = useState(allMembers[0]);\n    const [userInfo, setUserInfo] = useState(null);\n    const [userFriends, setUserFriends] = useState(null);\n    const [open, setOpen] = useState(false);\n    const [input, setInput] = useState(\"\");\n    const loading = open && allMembers.length === 0;\n    let idUser = useRouteMatch(\"/profil/:id/friends\").params.id;\n\n    const handleChange = (e) => {\n        setInput(e.target.value);\n    }\n\n    useEffect(() => {\n        betaseriesAPI.getUserInfoById(idUser).then(res => {\n            setUserInfo(res.data.member);\n        }).catch(err => {\n            console.log(err);\n        });\n\n        betaseriesAPI.friendList(idUser, access_token).then(res => {\n            setUserFriends(res.data.users);\n        }).catch(err => {\n            console.log(err);\n        });\n        \n        betaseriesAPI.friendsReceived(access_token).then(res => {\n            console.log(res);\n        }).catch(err => {\n            console.log(err);\n        });\n    }, [idUser]);\n\n    useEffect(() => {\n        if (input.length >= 2) {\n            betaseriesAPI.findMembers(input+\"%\").then(res => {\n                setAllMembers(\n                    res.data.users\n                );\n            }).catch(err => {\n                console.log(err);\n            });\n        }\n    }, [loading, input]);\n    \n    useEffect(() => {\n        if (value) {\n            history.push(`/profil/${value.id}`);\n        }\n    }, [value]);\n    \n    // console.log(userInfo, userFriends);\n\n    return (\n        <>\n            { userInfo !== null &&\n                <Container maxWidth={'lg'}>\n                    <Grid container spacing={4}>\n                        <Grid item xs={12}>\n                            <Paper className={classes.paper}>\n                                Membres suivis par <span className={classes.upperCase}>{userInfo.login}</span>\n                            </Paper>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <Autocomplete\n                                value={value}\n                                onChange={(event, newValue) => {\n                                    setValue(newValue);\n                                }}\n                                style={{ width: '100%' }}\n                                open={open}\n                                onOpen={() => {\n                                    setOpen(true);\n                                }}\n                                onClose={() => {\n                                    setOpen(false);\n                                }}\n                                // getOptionSelected={(allMembers, value) => allMembers.login === value.login}\n                                getOptionLabel={(allMembers) => allMembers.login}\n                                options={allMembers}\n                                loading={loading}\n                                renderInput={(params) => (\n                                    <TextField\n                                        {...params}\n                                        label=\"Recherche\"\n                                        variant=\"outlined\"\n                                        InputProps={{\n                                            ...params.InputProps,\n                                            endAdornment: (\n                                                <Fragment>\n                                                    {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                                                    {params.InputProps.endAdornment}\n                                                </Fragment>\n                                            ),\n                                        }}\n                                        onChange={handleChange}\n                                    />\n                                )}\n                            />\n                        </Grid>\n                        <Grid item xs={9}>\n                            <Paper className={classes.paper}>\n                                <p className={classes.textLeft}>\n                                    <span>N°: <span className={classes.upperCase}>{userInfo.stats.friends}</span></span>\n                                    {/* List des folowing */}\n                                </p>\n                                {userFriends && userFriends.map(e => {\n                                    return <Link to={`/profil/${e.id}`} key={e.id}><p>{e.login}</p></Link>\n                                })}\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Container>\n            }\n        </>\n    )\n}\n","import React, { useEffect } from 'react';\nimport { useStore, ACTIONS } from './store/store';\nimport { authService } from './services/authService';\nimport { betaseriesAPI } from './services/betaseriesAPI';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Navbar from './components/navbar/navbar';\nimport Movies from './components/pages/movies/getAllMovies';\nimport Shows from './components/pages/shows/getAllShows';\nimport ShowTest from './components/pages/shows/showDetails';\nimport Home from './components/pages/home/home';\nimport Profil from './components/pages/profil/profil';\nimport Amis from './components/pages/amis/amis';\n\nfunction App() {\n  const [store, dispatch] = useStore();\n\n  //resume session if valid token is found\n  useEffect(() => {\n    const access_token = authService.getToken();\n\n    if (access_token) {\n      betaseriesAPI.getUserInfo(access_token)\n        .then(response => {\n          const { login, avatar, locale, id } = response.data.member;\n          dispatch({ type: ACTIONS.LOGIN, payload: { login, access_token, avatar, locale, id } });\n        })\n        .catch(() => dispatch({ type: ACTIONS.USER_LOADING_DONE }));\n    } else {\n      dispatch({ type: ACTIONS.USER_LOADING_DONE });\n    }\n\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <header className=\"App-header\">\n          <Navbar />\n        </header>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/shows\" component={Shows} />\n          <Route exact path=\"/shows/:id\" component={ShowTest} />\n          <Route exact path=\"/movies\" component={Movies} />\n          <Route exact path=\"/profil/:id\" component={Profil} />\n          <Route exact path=\"/profil/:id/friends\" component={Amis} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { StoreProvider } from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider>\n      <App />\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}